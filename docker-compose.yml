---
version: '3.8'

services:
  backend:
    container_name: backend
    build: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - internal-network
      - default
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      API_KEYS: ${API_KEYS}
    restart: unless-stopped
    volumes:
      - ./backend:/app

  db:
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      interval: 5s
      retries: 10
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
    image: postgres:14.1-alpine
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/

  transport-app-caddy:
     image: caddy:2.6.2-alpine
     container_name: transport-app-caddy
     environment:
       FRONTEND_DOMAIN: ${FRONTEND_DOMAIN}
       FRONTEND_REACT_URL: ${FRONTEND_REACT_URL}
       API_DOMAIN: ${API_DOMAIN}
       DEBUG_DOMAIN: ${DEBUG_DOMAIN}
     ports:
       - '80:80'
       - '443:443'
       - '8000:8000'
       - '9000:9000'
     volumes:
       - ./Caddyfile:/etc/caddy/Caddyfile
       - caddy_data:/data
       - caddy_config:/config

volumes:
  caddy_config: null
  caddy_data: null

networks:
  internal-network:
    name: internal-network
    driver: bridge

